version: 2
jobs:
  test_and_sonar:
    docker:
      - image: nhereman/python-sonar
    working_directory: /root/src
    steps:
      - checkout
      - run:
          name: "Installing requirement for mysqlclient"
          command: apk update && apk add --no-cache mariadb-dev && apk add --no-cache gcc && apk add --no-cache libc-dev
      - run:
          name: "Installing requirement for psycopg2"
          command: apk add postgresql-dev musl-dev
      - run:
          name: "Installing requirements"
          command: pip3 install -r requirements.txt
      - run: 
          name: "Installing nose and coverage"
          command: pip3 install nose coverage
      - run: 
          name: "Test"
          command: python3 -m nose --with-coverage --cover-branches --cover-xml
      - run:
          name: "Sonarqube scan"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sonar-scanner \
                -Dsonar.projectKey=xalanih_qube \
                -Dsonar.organization=nhereman-github \
                -Dsonar.sources=. \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=${sonar_login} \
                -Dsonar.coverage.exclusions="setup.py,*/test/*,*/test/mocks/*,__init__.py,*/__init__.py,*/*/__init__.py,*/*/*/__init__.py" \
                -Dsonar.python.coverage.reportPath=coverage.xml
            fi
            if [ "${CIRCLE_BRANCH}" == "version_1_1_0" ]; then
              sonar-scanner \
                -Dsonar.projectKey=xalanih_version \
                -Dsonar.organization=nhereman-github \
                -Dsonar.sources=. \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=${sonar_version_branch} \
                -Dsonar.coverage.exclusions="setup.py,*/test/*,*/test/mocks/*,__init__.py,*/__init__.py,*/*/__init__.py,*/*/*/__init__.py" \
                -Dsonar.python.coverage.reportPath=coverage.xml
            fi
  publish:
    docker:
      - image: python:3.7-alpine
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: "Installing requirement to deploy"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              pip3 install --user --upgrade setuptools wheel twine
            fi
      - run:
          name: "Packaging"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              python3 setup.py sdist bdist_wheel
            fi
      - run:
          name: "Publishing"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              python3 -m twine upload -u ${pypi_user} -p ${pypi_pwd} dist/*
            fi
      
workflows:
  version: 2
  test_and_publish:
    jobs:
      - test_and_sonar:
          context: pip-cred
      - publish:
          requires:
             - test_and_sonar
          context: pip-cred
        
